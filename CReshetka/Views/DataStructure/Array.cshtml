@{
    ViewData["Title"] = "Массив (Array)";
}
<h1>@ViewData["Title"]</h1>

<div class="container">
    <p>
        <span>Массив</span> - это структура данных, которая позволяет хранить набор элементов одного типа. Массивы являются основным способом организации данных в программировании.
    <p>
    <p>
        <h3><span>Визуализация массива</span></h3>
    </p>
    <div style="text-align:center">
        <img class="rounded-md" src="\img\datastructure\array1.png" />
    </div>

    <p>
        <h3><span>Основные характеристики массива</span></h3>
    </p>
    <p>
        Тип элементов: Массив может содержать элементы одного типа данных, например, целочисленные значения, строки, объекты и т.д.
    </p>
    <p>
        Размерность: Массивы могут быть одномерными, двумерными или многомерными.
    </p>
    <p>
        Индексация: В C# индексация массивов начинается с 0. Это означает, что первый элемент массива имеет индекс 0, второй элемент имеет индекс 1, и так далее.
    </p>
    <p>
        Фиксированный размер: Размер массива определяется при его создании и не может быть изменен после этого.
    </p>
    <p>
        <h3><span>Создание массива</span></h3>
    </p>
    <p>
        В C# массивы могут быть созданы с помощью оператора new. Например, чтобы создать одномерный массив из 10 целочисленных значений, можно использовать следующий код:
    </p>
    <p>
        <pre><code>int[] array = new int[10];</code></pre>
    </p>
    <p>
        <h3><span>Итерация по массиву:</span></h3>
    </p>
    <p>
        Для перебора всех элементов массива можно использовать цикл for или цикл foreach. Например, чтобы перебрать все элементы массива и вывести их на экран, можно использовать следующий код:
    </p>
    <p>
        <pre><code>
for (int i = 0; i < array.Length; i++)
{
    Console.WriteLine(array[i]);
}
            </code></pre>
    </p>
    <p>
        Или:
    </p>
    <p>
        <pre><code>
foreach (int element in array)
{
    Console.WriteLine(element);
}
            </code></pre>
    </p>
    <p>
        <h3><span>Многомерные массивы</span></h3>
    </p>
    <p>
        Многомерные массивы в C# представляют собой массивы, которые содержат другие массивы. Они могут быть двумерными, трехмерными или даже более высоких размерностей.
    </p>
    <p>
        <h3><span>Двумерный массив</span></h3>
    </p>
    <p>
        Двумерный массив представляет собой таблицу, где каждый элемент имеет два индекса - номер строки и номер столбца. Двумерный массив можно создать с помощью оператора new, как показано ниже:
    </p>
    <p>
        <pre><code>int[,] matrix = new int[3, 4];</code></pre>
    </p>
    <p>
        В этом примере создается двумерный массив размером 3x4, то есть 3 строки и 4 столбца.
    </p>
    <p>
        <h3><span>Доступ к элементам двумерного массива:</span></h3>
    </p>
    <p>
        Элементы двумерного массива могут быть получены или изменены с помощью двух индексов. Например, чтобы получить значение элемента в первой строке и первом столбце, можно использовать следующий код:
    </p>
    <p>
        <pre><code>int element = matrix[0, 0];</code></pre>
    </p>
    <p>
        И чтобы изменить значение элемента в первой строке и первом столбце, можно использовать следующий код:
    </p>
    <p>
        <pre><code>matrix[0, 0] = 5;</code></pre>
    </p>
    <p>
        <h3><span>Итерация по двумерному массиву:</span></h3>
    </p>
    <p>
        Для перебора всех элементов двумерного массива можно использовать два цикла for. Например, чтобы перебрать все элементы двумерного массива и вывести их на экран, можно использовать следующий код:
    </p>
    <p>
        <pre><code>
for (int i = 0; i < matrix.GetLength(0); i++)
{
    for (int j = 0; j < matrix.GetLength(1); j++)
    {
        Console.WriteLine(matrix[i, j]);
    }
}
</code></pre>
    </p>
    <p>
        В этом примере метод GetLength() используется для получения размера массива в каждом измерении.
    </p>
    <p>
        <h3><span>Трехмерный массив:</span></h3>
    </p>
    <p>
        Трехмерный массив представляет собой массив, который содержит другие массивы, которые, в свою очередь, содержат другие массивы. Трехмерный массив можно создать с помощью оператора new, как показано ниже:
    </p>
    <p>
        <pre><code>int[,,] cube = new int[2, 2, 2];</code></pre>
    </p>
    <p>
        В этом примере создается трехмерный массив размером 2x2x2, то есть 2 слоя, каждый из которых содержит 2 строки и 2 столбца.
    </p>
    <p>
        <h3><span>Доступ к элементам трехмерного массива:</span></h3>
    </p>
    <p>
        Элементы трехмерного массива могут быть получены или изменены с помощью трех индексов. Например, чтобы получить значение элемента в первом слое, первой строке и первом столбце, можно использовать следующий код:
    </p>
    <p>
        <pre><code>int element = cube[0, 0, 0];</code></pre>
    </p>
    <p>
        И чтобы изменить значение элемента в первом слое, первой строке и первом столбце, можно использовать следующий код:
    </p>
    <p>
        <pre><code>cube[0, 0, 0] = 5;</code></pre>
    </p>
    <p>
        <h3><span>Итерация по трехмерному массиву:</span></h3>
    </p>
    <p>
        Для перебора всех элементов трехмерного массива можно использовать три цикла for. Например, чтобы перебрать все элементы трехмерного массива и вывести их на экран, можно использовать следующий код:
    </p>
    <p>
        <pre><code>
for (int i = 0; i < cube.GetLength(0); i++)
{
    for (int j = 0; j < cube.GetLength(1); j++)
    {
        for (int k = 0; k < cube.GetLength(2); k++)
        {
            Console.WriteLine(cube[i, j, k]);
        }
    }
}
            </code></pre>
    </p>
    <p>
        В целом, многомерные массивы являются мощным инструментом для работы с набором данных в C#, который позволяет представлять и обрабатывать данные в виде таблиц или объектов более высоких размерностей.
    </p>
    <p>
        <h3><span>Объяснение от <a href="https://www.youtube.com/SimpleCodeIT">SimpleCode</a>:</span></h3>
    </p>
    <div style="align-content:center">
        <iframe class="rounded-md" width="1280" height="720" src="https://www.youtube.com/embed/O6tWN5iPU08" title="ЧТО ТАКОЕ МАССИВЫ | ОДНОМЕРНЫЙ МАССИВ C# ПРИМЕРЫ | C# ОТ НОВИЧКА К ПРОФЕССИОНАЛУ | # 24" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    </div>

</div>
